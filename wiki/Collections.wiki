#summary Инжектирование типов вида IService[], IList<IService>, ...

Если у вашего типа есть зависимость в которую может быть инжектирован массив сервисов, контейнер это сделает самостоятельно.

Вот тест, демонстрирующий эту функциональность:
<wiki:comment>[Collections.Sample</wiki:comment>
{{{

public class Item {}
public class CollectionHolder
{
	public Item[] Items { get; set; }
	public CollectionHolder(Item[] items)
	{
		Items = items;
	}
}
[Test]
public void can_inject_collections()
{
	var container = new Container();
	Assert.AreEqual(1, container.Get<Item[]>().Length);
	Assert.AreEqual(1, container.Get<IEnumerable<Item>>().Count());
	Assert.AreEqual(1, container.Get<ICollection<Item>>().Count());
	Assert.AreEqual(1, container.Get<IList<Item>>().Count());
	Assert.AreEqual(1, container.Get<CollectionHolder>().Items.Count());
}
}}}
<wiki:comment></wiki:comment>